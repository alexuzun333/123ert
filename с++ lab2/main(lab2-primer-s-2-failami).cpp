#include <iostream>

static int hello(int input)
{
    return input;
};

int main()
{
    int result = hello(44);
    std::cout << result;
    return 0;
};

// =>У функций с одинаковым названием без статика не локальная область видимости, а глобальная
// 1.если мы снова возьмем и скомпилируем оба файла только с объявленной функцией без норм тела, то ниче работать не будет.
// 2.если мы берем и комплируем оба файла, с определением в файле f.cpp и остальным в мейне, то все работает из-за глобальной области видимости.
// 3.если мы компилируем только мейн то ниче не работает потому что там нет определения функции
// 4.статик делает область видимости функции локальной и ниче работать тоже не будет error: static declaration of 'hello' follows non-static declaration
// 5.если и там и там статик из-за локальной области видимости обоих функций то будет
// выполнено несколько копий функции хелло если компилятор не уберет неиспользованные
// копии и у нас просто в консоль выведется результат 44 как и должно быть(но выведется очевидно 1 раз)